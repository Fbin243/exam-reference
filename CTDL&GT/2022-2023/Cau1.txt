a)

ABCDEFGHIJKLMNOPQRSTUVWXYZ

S O R T I N G D A T A

Selection Sort:

[S] O R [T] I N G D A T A
-> T O R S I N G D A T A

T [O] R S I N G D A [T] A
-> T T R S I N G D A O A

T T [R] [S] I N G D A O A
-> T T S R I N G D A O A

T T S R [I] N G D A [O] A
-> T T S R O N G D A I A

T T S R O N [G] D A [I] A
-> T T S R O N I D A G A

T T S R O N I [D] A [G] A
-> T T S R O N I G A D A

T T S R O N I G [A] [D] A
-> T T S R O N I G D A A

b)
7, 9, 11, 13, 2, 4, 8, 17, 16, 15


7, 11, 9, 17, 13, 15, 16, 8, 4, 2

2 4 6 8 10 12 14 16 18 20
20 18 16 14 12 10 8 6 4 2

Selection Sort -> O(n^2)
Merge Sort, Heap Sort, Quick Sort (Worst case: O(n^2) nếu chọn phần tử chốt (pivot) luôn chọn đúng phần tử lớn nhất)
-> Avg: O(n * log(n))

Radix sort
(Khai báo những bucket -> Giống như xái mảng phụ)

Chọn random index của cái pivot

2 4 6 8 10 12 14 16 18 20

Thuật toán:
- Đưa hết các phần tử lẻ lên đầu mảng
  Giữ 2 index, index 1 sẽ tìm số chẵn, index 2 sẽ tìm số lẻ
  Index 2 luôn nằm sau index 1
  -> Swap với nhau nếu gặp (index 1 sẽ là số chẵn, index 2 sẽ là số lẻ)
